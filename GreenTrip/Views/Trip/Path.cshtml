@model GreenTrip.Models.Estimation_Path
@{
    String[] TravelList = { "鼎富發豬油拌飯", "臺南市美術館2館",
        "富盛號", "北山雜貨", "桑原商店", "大東夜市",
    "台南民宿二弄八號","a Room房間咖啡","UBUNTU烏邦圖書店","旭峯號","KOEMON"};
    var index = 0;//給預估時間用的
}

<head>
    <title>綠遊經 - 路徑</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-F3w7mX95PdgyTmZZMECAngseQB83DfGTowi0iMjiWaeVhAn4FJkqJByhZMI3AhiU" crossorigin="anonymous">
    <link rel="stylesheet" href="~/assets/css/main.css" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@48,400,0,0" />
    <noscript><link rel="stylesheet" href="~/assets/css/noscript.css" /></noscript>
    <style type="text/css" media="screen">
        #map {
            position: absolute;
            top: 3em;
            left: 0%;
            height:90%;
            width: 100%;
        }

        #page-wrapper {
            background-color: white;
        }

        #cover-div {
            background-color: white;
            position: absolute;
            left: 0%;
            top: 3em;
            z-index: 3;
        }
        /*rwd 小於760PX MAP消失*/
        @@media screen and (max-width:760px) {
            #map {
                display: none
            }

            #cover-div {
                width: 100%
            }
        }
    </style>

</head>

        <!-- Main -->

        <div id="cover-div" style="max-height:90%;overflow-x:hidden;overflow-y:auto">
            <header>
                <h2 style="color:black;text-align:center">你的行程</h2>
            </header>
            @for (int rows = 0; rows < TravelList.Length; rows++)
            {
                var titleN = (rows + 1).ToString() + ". " + TravelList[rows];
                var link = $"/images/all/{TravelList[rows]}.jpg";
                <div class="row">
                    <div class="col-5" style="padding-left:10%">
                        <h4 style="color:black;">@titleN</h4>
                    </div>
                    <div class="col-7">
                        <img style="max-width: 200px" src="@link" />
                    </div>
                </div>
                <br />
                if (index < @Model.estimatations.Count())
                {
                    <div class="row">
                        <div class="col-4" style="text-align: center;">
                            <span class="material-symbols-outlined" style="color: black;font-size:42px">
                                south
                            </span>
                        </div>
                        <div class="col-8">
                            <div class="row">
                                <h1 style="color: black">預估路程:@Model.estimatations[index].distance</h1>
                            </div>
                            <div class="row">
                                <h1 style="color: black">預估時間:@Model.estimatations[index++].duration</h1>
                            </div>
                        </div>
                    </div>
                    <br />
                }
            }
        </div>
        <div id="map">
            @* GOOGLE MAP *@
        </div>


    <!-- Scripts -->
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAk3dGWQh8y5rnhNoG91SBesiTvYQUrjj0&callback=initMap">
    </script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
    <script>
        function initMap() {
            var Station_latlng = { lat: @Model.locations.FirstOrDefault().lat, lng:@Model.locations.FirstOrDefault().lng }; // 台北車站的經緯度
            @{
                var i = 1;
            }
            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 15, //放大的倍率
                zoomControl: true,
                center: Station_latlng //初始化的地圖中心位置
            });
            //--------下面是呼叫一個新marker------


                // Define a symbol using SVG path notation, with an opacity of 1.

                @foreach (var location in Model.locations)
                    {
                        <text>
                            var str = '<div style="color:black">' +'第' + '@i.ToString()' + '站'+'('+'@location.name.ToString()'+')'+'</div>';
                            var marker = new google.maps.Marker({
                            position: { lat: @location.lat, lng: @location.lng }, //marker的放置位置
                            map: map, //這邊的map指的是第四行的map變數
                                });
                            var infowindow = new google.maps.InfoWindow({
                                content: str
                            });
                            infowindow.open(map, marker);
                            @{
                                }
                                marker.addListener("click", () => {
                                    infowindow.open({
                                        anchor: marker,
                                        map,
                                        shouldFocus: false,
                                    });
                                });

                        </text>
                                i++;

                                }

                    var lineSymbol = {
                        path: 'M 0,-1 0,1',
                        strokeOpacity: 1,
                        scale: 4
                    };
                    // Create the polyline, passing the symbol in the 'icons' property.
                    // Give the line an opacity of 0.
                    // Repeat the symbol at intervals of 20 pixels to create the dashed effect.
                    var line = new google.maps.Polyline({
                        path: [ @{ foreach(var item in Model.locations)
                                        {
                                            <Text>
                                            { lat:@item.lat, lng:@item.lng},
                                            </Text>
                                        }
                                    }],
                            strokeOpacity: 0,
                            icons: [{
                                icon: lineSymbol,
                                offset: '0',
                                repeat: '20px'
                            }],
                            map: map
                        });
        }
    </script>
